@book{bertinSemiologyGraphicsDiagrams1983,
  title = {Semiology of Graphics: Diagrams, Networks, Maps},
  shorttitle = {Semiology of Graphics},
  author = {Bertin, Jacques and Jensch, Georg and Schade, Dieter and Scharfe, Wolfgang},
  year = {1983},
  publisher = {University of Wisconsin Press},
  address = {Madison, Wis, London},
  isbn = {978-0-299-09060-9},
  langid = {english},
  keywords = {Cartography.,Graphic methods.},
  annotation = {Open Library ID: OL22163335M}
}

@book{wickhamGgplot2ElegantGraphics2016a,
  title = {Ggplot2: {{Elegant}} Graphics for Data Analysis},
  author = {Wickham, Hadley},
  year = {2016},
  publisher = {Springer-Verlag New York},
  isbn = {978-3-319-24277-4}
}

@article{wickhamLayeredGrammarGraphics2010,
  title = {A {{Layered Grammar}} of {{Graphics}}},
  author = {Wickham, Hadley},
  year = {2010},
  month = jan,
  journal = {Journal of Computational and Graphical Statistics},
  volume = {19},
  number = {1},
  pages = {3--28},
  publisher = {ASA Website},
  issn = {1061-8600},
  doi = {10.1198/jcgs.2009.07098},
  urldate = {2024-11-17},
  abstract = {A grammar of graphics is a tool that enables us to concisely describe the components of a graphic. Such a grammar allows us to move beyond named graphics (e.g., the ``scatterplot'') and gain insight into the deep structure that underlies statistical graphics. This article builds on Wilkinson, Anand, and Grossman (2005), describing extensions and refinements developed while building an open source implementation of the grammar of graphics for R, ggplot2. The topics in this article include an introduction to the grammar by working through the process of creating a plot, and discussing the components that we need. The grammar is then presented formally and compared to Wilkinson's grammar, highlighting the hierarchy of defaults, and the implications of embedding a graphical grammar into a programming language. The power of the grammar is illustrated with a selection of examples that explore different components and their interactions, in more detail. The article concludes by discussing some perceptual issues, and thinking about how we can build on the grammar to learn how to create graphical ``poems.'' Supplemental materials are available online.},
  keywords = {Grammar of graphics,Statistical graphics},
  file = {/Users/iain/Zotero/storage/H7JZM64S/Wickham - 2010 - A Layered Grammar of Graphics.pdf}
}

@book{wilkinsonGrammarGraphics2013,
  title = {The {{Grammar}} of {{Graphics}}},
  author = {Wilkinson, Leland},
  year = {2013},
  month = mar,
  publisher = {Springer Science \& Business Media},
  abstract = {Before writing the graphics for SYSTAT in the 1980's, I began by teaching a seminar in statistical graphics and collecting as many different quantitative graphics as I could find. I was determined to produce a package that could draw every statistical graphic I had ever seen. The structure of the program was a collection of procedures named after the basic graph types they p- duced. The graphics code was roughly one and a half megabytes in size. In the early 1990's, I redesigned the SYSTAT graphics package using - ject-based technology. I intended to produce a more comprehensive and - namic package. I accomplished this by embedding graphical elements in a tree structure. Rendering graphics was done by walking the tree and editing worked by adding and deleting nodes. The code size fell to under a megabyte. In the late 1990's, I collaborated with Dan Rope at the Bureau of Labor Statistics and Dan Carr at George Mason University to produce a graphics p- duction library called GPL, this time in Java. Our goal was to develop graphics components. This book was nourished by that project. So far, the GPL code size is under half a megabyte.},
  googlebooks = {ZiwLCAAAQBAJ},
  isbn = {978-1-4757-3100-2},
  langid = {english},
  keywords = {Computers / Mathematical & Statistical Software,Mathematics / Combinatorics,Mathematics / Graphic Methods,Mathematics / Probability & Statistics / Stochastic Processes}
}
